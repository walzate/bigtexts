<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<preprocessingTasksCatalog>
    <preprocessingTasks>
        <preprocessingTask>
            <name>SnowballStemmer-EN</name>
            <requiredJars>
                <requiredJar>libstemmer-1.0.jar</requiredJar>
                <requiredJar>bigtexts-udfs-1.0.jar</requiredJar>
            </requiredJars>
            <commands>
                <command>co.edu.javeriana.bigtextsudfs.SNOWBALL_STEMMER_EN((chararray)$0)</command>
            </commands>
        </preprocessingTask>
        <preprocessingTask>
            <name>SnowballStemmer-ES</name>
            <requiredJars>
                <requiredJar>libstemmer-1.0.jar</requiredJar>
                <requiredJar>bigtexts-udfs-1.0.jar</requiredJar>
            </requiredJars>
            <commands>
                <command>co.edu.javeriana.bigtextsudfs.SNOWBALL_STEMMER_ES((chararray)$0)</command>
            </commands>
        </preprocessingTask>
        <preprocessingTask>
            <name>LovinsStemmer</name>
            <requiredJars>
                <requiredJar>weka-stable-3.6.10.jar</requiredJar>
                <requiredJar>bigtexts-udfs-1.0.jar</requiredJar>
            </requiredJars>
            <commands>
                <command>co.edu.javeriana.bigtextsudfs.LOVINS_STEMMER((chararray)$0)</command>
            </commands>
        </preprocessingTask>
        <preprocessingTask>
            <name>Tokenizer</name>
            <commands>
                <command>flatten(TOKENIZE($0))</command>
            </commands>
            <parameters>
                <parameter>
                    <name>fieldDelimiter</name>
                    <label>Delimitador</label>
                    <defaultValue>' '</defaultValue>
                    <type>String</type>
                </parameter>
            </parameters>
        </preprocessingTask>
        <preprocessingTask>
            <name>Tokenizer-CoreNLP</name>
            <requiredJars>
                <requiredJar>stanford-corenlp-3.4.1.jar</requiredJar>                
                <requiredJar>bigtexts-udfs-1.0.jar</requiredJar>
            </requiredJars>
            <implementationClass>co.edu.javeriana.bigtextsudfs.TOKENIZE</implementationClass>
            <commands>
                <command>co.edu.javeriana.bigtextsudfs.TOKENIZE((chararray)$0)</command>
            </commands>
            <parameters>
                <parameter>
                    <name>tokenize.whitespace</name>
                    <label>tokenize.whitespace</label>
                    <defaultValue>false</defaultValue>
                    <value></value>
                    <type>Boolean</type>
                    <description>if set to true, separates words only when whitespace is encountered.</description>
                </parameter>
                <parameter>
                    <name>tokenize.options</name>
                    <label>tokenize.options</label>
                    <defaultValue>americanize=false</defaultValue>
                    <value></value>
                    <type>String</type>
                    <description>Accepts the options of PTBTokenizer for example, things like "americanize=false" or "strictTreebank3=true,untokenizable=allKeep".</description>
                </parameter>
            </parameters>
        </preprocessingTask>
        <preprocessingTask>
            <name>POS-Tagger-EN</name>
            <requiredJars>
                <requiredJar>stanford-corenlp-3.4.1.jar</requiredJar>
                <requiredJar>bigtexts-udfs-1.0.jar</requiredJar>
            </requiredJars>
            <commands>
                <command>co.edu.javeriana.bigtextsudfs.POS_TAGGER_EN((chararray)$0)</command>
            </commands>
        </preprocessingTask>
        <preprocessingTask>
            <name>POS-Tagger-ES</name>
            <requiredJars>
                <requiredJar>stanford-corenlp-3.4.1.jar</requiredJar>
                <requiredJar>bigtexts-udfs-1.0.jar</requiredJar>
            </requiredJars>
            <commands>
                <command>co.edu.javeriana.bigtextsudfs.POS_TAGGER_ES((chararray)$0)</command>
            </commands>
        </preprocessingTask>
        <preprocessingTask>
            <name>Splitter</name>
            <commands>
                <command>FLATTEN(STRSPLIT($0,',',0))</command>
            </commands>
            <parameters>
                <parameter>
                    <name>regex</name>
                    <label>Expresión regular</label>
                    <defaultValue>' '</defaultValue>
                    <type>String</type>
                </parameter>
                <parameter>
                    <name>limit</name>
                    <label>Límite</label>
                    <defaultValue>0</defaultValue>
                    <type>Integer</type>
                </parameter>
            </parameters>
        </preprocessingTask>
        <preprocessingTask>
            <name>NamedEntityRecognition-EN</name>
            <requiredJars>
                <requiredJar>stanford-corenlp-3.4.1.jar</requiredJar>
                <requiredJar>bigtexts-udfs-1.0.jar</requiredJar>
            </requiredJars>
            <commands>
                <command>co.edu.javeriana.bigtextsudfs.NER_EN((chararray)$0)</command>
            </commands>
            <parameters>
                <parameter>
                    <name>ner.useSUTime</name>
                    <label>ner.useSUTime</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>Whether or not to use sutime. On by default in the version which includes sutime, off by default in the version that doesn't. If not processing English, make sure to set this to false.</description>
                </parameter>
                <parameter>
                    <name>ner.model</name>
                    <label>ner.model</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>NER model(s) in a comma separated list to use instead of the default models. By default, the models used will be the 3class, 7class, and MISCclass models, in that order.</description>
                </parameter>
                <parameter>
                    <name>ner.applyNumericClassifiers</name>
                    <label>ner.applyNumericClassifiers</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>Whether or not to use numeric classifiers, including SUTime. These are hardcoded for English, so if using a different language, this should be set to false.</description>
                </parameter>
                <parameter>
                    <name>sutime.markTimeRanges</name>
                    <label>sutime.markTimeRanges</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>Tells sutime to mark phrases such as "From January to March" instead of marking "January" and "March" separately</description>
                </parameter>
                <parameter>
                    <name>sutime.includeRange</name>
                    <label>sutime.includeRange</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>If marking time ranges, set the time range in the TIMEX output from sutime</description>
                </parameter>
            </parameters>
        </preprocessingTask>
        <preprocessingTask>
            <name>NamedEntityRecognition-ES</name>
            <requiredJars>
                <requiredJar>stanford-corenlp-3.4.1.jar</requiredJar>
                <requiredJar>bigtexts-udfs-1.0.jar</requiredJar>
            </requiredJars>
            <commands>
                <command>co.edu.javeriana.bigtextsudfs.NER_ES((chararray)$0)</command>
            </commands>
            <parameters>
                <parameter>
                    <name>ner.useSUTime</name>
                    <label>ner.useSUTime</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>Whether or not to use sutime. On by default in the version which includes sutime, off by default in the version that doesn't. If not processing English, make sure to set this to false.</description>
                </parameter>
                <parameter>
                    <name>ner.model</name>
                    <label>ner.model</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>NER model(s) in a comma separated list to use instead of the default models. By default, the models used will be the 3class, 7class, and MISCclass models, in that order.</description>
                </parameter>
                <parameter>
                    <name>ner.applyNumericClassifiers</name>
                    <label>ner.applyNumericClassifiers</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>Whether or not to use numeric classifiers, including SUTime. These are hardcoded for English, so if using a different language, this should be set to false.</description>
                </parameter>
                <parameter>
                    <name>sutime.markTimeRanges</name>
                    <label>sutime.markTimeRanges</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>Tells sutime to mark phrases such as "From January to March" instead of marking "January" and "March" separately</description>
                </parameter>
                <parameter>
                    <name>sutime.includeRange</name>
                    <label>sutime.includeRange</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>If marking time ranges, set the time range in the TIMEX output from sutime</description>
                </parameter>
            </parameters>
        </preprocessingTask>
        <preprocessingTask>
            <name>CorreferenceRecognition-EN</name>
            <requiredJars>
                <requiredJar>stanford-corenlp-3.4.1.jar</requiredJar>
                <requiredJar>jollyday-0.4.7.jar</requiredJar>
                <requiredJar>bigtexts-udfs-1.0.jar</requiredJar>
            </requiredJars>
            <commands>
                <command>co.edu.javeriana.bigtextsudfs.DCOREF_EN((chararray)$0)</command>
            </commands>
            <parameters>    
                <parameter>
                    <name>dcoref.sievePasses</name>
                    <label>dcoref.sievePasses</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>list of sieve modules to enable in the system, specified as a comma-separated list of class names. By default, this property is set to include: "edu.stanford.nlp.dcoref.sievepasses.MarkRole, edu.stanford.nlp.dcoref.sievepasses.DiscourseMatch, edu.stanford.nlp.dcoref.sievepasses.ExactStringMatch, edu.stanford.nlp.dcoref.sievepasses.RelaxedExactStringMatch, edu.stanford.nlp.dcoref.sievepasses.PreciseConstructs, edu.stanford.nlp.dcoref.sievepasses.StrictHeadMatch1, edu.stanford.nlp.dcoref.sievepasses.StrictHeadMatch2, edu.stanford.nlp.dcoref.sievepasses.StrictHeadMatch3, edu.stanford.nlp.dcoref.sievepasses.StrictHeadMatch4, edu.stanford.nlp.dcoref.sievepasses.RelaxedHeadMatch, edu.stanford.nlp.dcoref.sievepasses.PronounMatch". The default value can be found in Constants.SIEVEPASSES.</description>
                </parameter>
                <parameter>
                    <name>dcoref.demonym</name>
                    <label>dcoref.demonym</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>list of demonyms from http://en.wikipedia.org/wiki/List_of_adjectival_forms_of_place_names. The format of this file is: location TAB singular gentilic form TAB plural gentilic form, e.g., "Algeria Algerian Algerians".</description>
                </parameter>
                <parameter>
                    <name>dcoref.animate</name>
                    <label>dcoref.animate</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>lists of animate/inanimate words, from (Ji and Lin, 2009). The format is one word per line.</description>
                </parameter>
                <parameter>
                    <name>dcoref.inanimate</name>
                    <label>dcoref.inanimate</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>lists of animate/inanimate words, from (Ji and Lin, 2009). The format is one word per line.</description>
                </parameter>
                <parameter>
                    <name>dcoref.male</name>
                    <label>dcoref.male</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>lists of words of male/female/neutral gender, from (Bergsma and Lin, 2006) and (Ji and Lin, 2009). The format is one word per line.</description>
                </parameter>
                <parameter>
                    <name>dcoref.female</name>
                    <label>dcoref.female</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>lists of words of male/female/neutral gender, from (Bergsma and Lin, 2006) and (Ji and Lin, 2009). The format is one word per line.</description>
                </parameter>
                <parameter>
                    <name>dcoref.neutral</name>
                    <label>dcoref.neutral</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>lists of words of male/female/neutral gender, from (Bergsma and Lin, 2006) and (Ji and Lin, 2009). The format is one word per line.</description>
                </parameter>
                <parameter>
                    <name>dcoref.plural</name>
                    <label>dcoref.plural</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>lists of words that are plural or singular, from (Bergsma and Lin, 2006). The format is one word per line. All the above dictionaries are already set to the files included in the stanford-corenlp-models JAR file, but they can easily be adjusted to your needs by setting these properties.</description>
                </parameter>
                <parameter>
                    <name>dcoref.singular</name>
                    <label>dcoref.singular</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>lists of words that are plural or singular, from (Bergsma and Lin, 2006). The format is one word per line. All the above dictionaries are already set to the files included in the stanford-corenlp-models JAR file, but they can easily be adjusted to your needs by setting these properties.</description>
                </parameter>
                <parameter>
                    <name>dcoref.maxdist</name>
                    <label>dcoref.maxdist</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>the maximum distance at which to look for mentions. Can help keep the runtime down in long documents.</description>
                </parameter>
                <parameter>
                    <name>oldCorefFormat</name>
                    <label>oldCorefFormat</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>produce a CorefGraphAnnotation, the output format used in releases v1.0.3 or earlier. Note that this uses quadratic memory rather than linear.</description>
                </parameter>
            </parameters>
        </preprocessingTask>
        <preprocessingTask>
            <name>RegexNamedEntityRecognition</name>
            <requiredJars>
                <requiredJar>stanford-corenlp-3.4.1.jar</requiredJar>
                <requiredJar>jollyday-0.4.7.jar</requiredJar>
                <requiredJar>bigtexts-udfs-1.0.jar</requiredJar>
            </requiredJars>
	    <implementationClass>co.edu.javeriana.bigtextsudfs.REGEXNER</implementationClass>
            <commands>
                <command>co.edu.javeriana.bigtextsudfs.REGEXNER((chararray)$0)</command>
            </commands>
            <parameters>                
		<parameter>
                    <name>regexner.rules</name>
                    <label>regexner.rules</label>
                    <defaultValue>acetaminofen=MEDICAMENTO,ibuprofeno=MEDICAMENTO</defaultValue>
                    <type>String</type>
                    <description>comma separated rules i.e. acetaminofen=MEDICAMENTO,ibuprofeno=MEDICAMENTO</description>
                </parameter>
            </parameters>
        </preprocessingTask>
        <preprocessingTask>
            <name>SentenceSplit</name>
            <requiredJars>
                <requiredJar>stanford-corenlp-3.4.1.jar</requiredJar>
                <requiredJar>jollyday-0.4.7.jar</requiredJar>
                <requiredJar>bigtexts-udfs-1.0.jar</requiredJar>
            </requiredJars>
            <commands>
                <command>co.edu.javeriana.bigtextsudfs.SSPLIT((chararray)$0)</command>
            </commands>
            <parameters>
                <parameter>
                    <name>ssplit.eolonly</name>
                    <label>ssplit.eolonly</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>only split sentences on newlines. Works well in conjunction with "-tokenize.whitespace true", in which case StanfordCoreNLP will treat the input as one sentence per line, only separating words on whitespace.</description>
                </parameter>
                <parameter>
                    <name>ssplit.isOneSentence</name>
                    <label>ssplit.isOneSentence</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>each document is to be treated as one sentence, no sentence splitting at all.</description>
                </parameter>
                <parameter>
                    <name>ssplit.newlineIsSentenceBreak</name>
                    <label>ssplit.newlineIsSentenceBreak</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>Whether to treat newlines as sentence breaks. This property has 3 legal values: "always", "never", or "two". The default is "two". "always" means that a newline is always a sentence break (but there still may be multiple sentences per line). This is often appropriate for texts with soft line breaks. "never" means to ignore newlines for the purpose of sentence splitting. This is appropriate when just the non-whitespace characters should be used to determine sentence breaks. "two" means that two or more consecutive newlines will be treated as a sentence break. This option can be appropriate when dealing with text with hard line breaking, and a blank line between paragraphs.</description>
                </parameter>
                <parameter>
                    <name>ssplit.boundaryMultiTokenRegex</name>
                    <label>ssplit.boundaryMultiTokenRegex</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description>Value is a multi-token sentence boundary regex.</description>
                </parameter>
                <parameter>
                    <name>ssplit.boundaryTokenRegex</name>
                    <label>ssplit.boundaryTokenRegex</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description></description>
                </parameter>
                <parameter>
                    <name>ssplit.boundariesToDiscard</name>
                    <label>ssplit.boundariesToDiscard</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description></description>
                </parameter>
                <parameter>
                    <name>ssplit.htmlBoundariesToDiscard</name>
                    <label>ssplit.htmlBoundariesToDiscard</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description></description>
                </parameter>
                <parameter>
                    <name>ssplit.tokenPatternsToDiscard</name>
                    <label>ssplit.tokenPatternsToDiscard</label>
                    <defaultValue></defaultValue>
                    <type>String</type>
                    <description></description>
                </parameter>
            </parameters>
        </preprocessingTask>
    </preprocessingTasks>
</preprocessingTasksCatalog>
